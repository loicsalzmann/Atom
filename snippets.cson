# Your snippets
#
# Atom snippets allow you to enter a simple prefix in the editor and hit tab to
# expand the prefix into a larger code block with templated values.
#
# You can create a new snippet in this file by typing "snip" and then hitting
# tab.
#
# An example CoffeeScript snippet to expand log to console.log:
#
# '.source.coffee':
#   'Console log':
#     'prefix': 'log'
#     'body': 'console.log $1'
#
# Each scope (e.g. '.source.coffee' above) can only be declared once.
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# http://flight-manual.atom.io/using-atom/sections/basic-customization/#_cson

'.text.html':
    'HTML5 Skeleton':
        'prefix': 'html5'
        'body': '
            <!DOCTYPE html>\n
            <html>\n
            \t<head>\n
            \t\t<meta charset="utf-8">\n
            \t\t<meta name="viewport" content="width=device-width, initial-scale=1">\n
            \t\t<title>Title</title>\n
            \t\t<link rel="icon" href="assets/images/favicons/favicon.ico" />\n
            \t\t<link rel="icon" type="image/png" href="assets/images/favicons/favicon.png" />\n
            \t\t<link rel="stylesheet" href="assets/styles/main.css">\n
            \t\t<script src="assets/scripts/main.js"></script>\n
            \t</head>\n
            \t<body>\n\n
            \t\t<header id="header">\n
            \t\t\t<div class="container">\n
            \t\t\t</div>\n
            \t\t</header>\n\n
            \t\t<div id="main">\n
            \t\t\t<div class="container">\n
            \t\t\t</div>\n
            \t\t</div>\n\n
            \t\t<footer id="footer">\n
            \t\t\t<div class="container">\n
            \t\t\t</div>\n
            \t\t</footer>\n\n
            \t</body>\n
            </html>'

'.source.js':
    'jQuery Skeleton':
        'prefix': 'jQuery'
        'body': '
            $(document).ready(function() {\n\n
            \tconsole.log(\'Document ready !\');\n\n
            });'

'.source.php':
    'PHP print_r':
        'prefix': 'printVarData'
        'body': 'echo \'<pre>\'.print_r($var, true).\'</pre>\';'
    'PHP loop':
        'prefix': 'loop'
        'body': '
            <?php\n
            \t$args = [\n
            \t\t\'post_type\' => $post_type,\n
            \t\t\'post_status\' => \'published\',\n
            \t\t\'posts_per_page\' => -1\n
            \t);\n\n
            \t$query = new WP_Query($args);\n\n
            \t$count = $query->post_count;\n
            \t$iRow = 0;\n
            \t$i = 0;\n
            ?>\n\n
            <?php if ($query->have_posts()) : ?>\n
            \t<?php while ($query->have_posts()) : $query->the_post(); $i++; $iRow++; ?>\n\n
            \t\t<?php if ($iRow == 1) { ?>\n
            \t\t\t<div class="row-elements">\n
            \t\t<?php } ?>\n\n
            \t\t\t<div class="element">\n
            \t\t\t\tElement\n
            \t\t\t</div> <!-- .element -->\n\n
            \t\t<?php if ($iRow == 3 || $count == $i) { $rowElem = 0; ?>\n
            \t\t\t</div> <!-- .row-elements -->\n
            \t\t<?php } ?>\n\n
            \t<?php endwhile; ?>\n
            <?php endif; ?>\n
            <?php wp_reset_postdata(); ?>\n\n'
